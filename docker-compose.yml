version: '3.1'
services:
  db-inventory:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-grupoinmaculada}
      POSTGRES_DB: ${POSTGRES_DB:-inventory}
      PGDATA: /data/postgres
    volumes:
      - /data/postgres
    ports:
      - 5431:5432
    networks:
      - postgres
  db-fraud:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-grupoinmaculada}
      POSTGRES_DB: ${POSTGRES_DB:-fraud}
      PGDATA: /data/postgres
    volumes:
      - /data/postgres
    ports:
      - 5432:5432
    networks:
      - postgres
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
#  eureka-server:
#    image: inmaculada/eureka-server:latest
#    container_name: eureka-server
#    ports:
#      - 8761:8761
#    networks:
#      - spring
#  inventory:
#    image: inmaculada/inventory:latest
#    container_name: inventory
#    ports:
#      - 8080:8080
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - eureka-server
#      - db-inventory
#      #- rabbitmq
#  fraud:
#    image: inmaculada/fraud:latest
#    container_name: fraud
#    ports:
#      - 8082:8082
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - eureka-server
#      - db-fraud
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    networks:
      - spring
    restart: always
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - spring
    restart: always

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  prometheus_data: {}
  grafana_data: {}